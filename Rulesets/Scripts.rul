items:
  - type: STR_SHOUT
    specialIconSprite: 1
    battleType: 9
    weight: 0
    tuUse: 30
    accuracyUse: 100
    psiAttackName: STR_SHOUT
    costPanic:
      time: 0
    costMindControl:
      time: 0
    recover: false
    damageType: 1
    power: 1
    fixedWeapon: true
    hitAnimation: -1
    maxRange: 15
    targetMatrix: 6
    blastRadius: 0
    tags:
      Shout: 1
  - type: STR_HANDCUFFS
    battleType: 6
    size: 0.1
    medikitTargetImmune: true
    invWidth: 1
    invHeight: 1
    tuUse: 60
    weight: 2
    costBuy: 300
    costSell: 200
    medikitActionName: STR_USE_CUFFS
    medikitTargetMatrix: 32
    stimulant: 1
    tags:
      Cuffs: 1

    

  - type: STR_9MM_PISTOL_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_9MM_PISTOL_X20 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_9MM_PISTOL_X30 #ignoreDuplicate
    tags:
     AmmoNo: 3
  - type: STR_7_62MM_SOVIET_RIFLE_X10 #ignoreDuplicate
    tags:
     AmmoNo: 1
  - type: STR_7_62MM_SOVIET_RIFLE_X30 #ignoreDuplicate
    tags:
     AmmoNo: 2
  - type: STR_7_62MM_SOVIET_RIFLE_X40 #ignoreDuplicate
    tags:
     AmmoNo: 3
  - type: STR_7_62MM_SOVIET_RIFLE_X75 #ignoreDuplicate
    tags:
     AmmoNo: 4
  - type: STR_MAKAROV #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_MP5 #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_AKM #ignoreDuplicate
    tags:
     AmmoReSprite: 1
  - type: STR_SKORPION #ignoreDuplicate
    tags:
     FoldStock: 1
     AmmoReSprite: 1
  - type: STR_MPX #ignoreDuplicate
    tags:
     FoldStock: 1
     AmmoReSprite: 1

  - type: STR_RIOT_SHIELD #ignoreDuplicate
    tags:
     Shield: 1
       
  - type: STR_FLASHBANG_GRENADE #ignoreDuplicate
    tags:
     FlashBang: 1
  
extended:
  tags:
    BattleUnit:
      Rank: int
      Shouted: int
      FlashBanged: int
      OGfiring: int
      OGreactions: int
    RuleItem:
      Shout: int
      Cuffs: int
      AmmoReSprite: int
      AmmoNo: int
      FoldStock: int
      Shield: int
      FlashBang: int
#      JammChance: int
    BattleGame:
      Enemies: int
      Allies: int
      Turn: int
  scripts:

     createUnit:
        - offset: 1 #Halves enemies Tu:s on the first turn
          code: |
           var int tu;
           var int remainder;
           var int faction;
           BattleUnit.getFaction unit faction;
           if eq faction 1;
            unit.getTimeUnits tu;
            set remainder tu;
            mod remainder 2;
            sub tu remainder;
            div tu 20;
            BattleUnit.setTimeUnits unit tu;
            end;
           return;
        - offset: 2 #Makes Flashbang work early
          code: |
           BattleUnit.setTag unit Tag.FlashBanged -5;
           return;


     newTurnItem: #Resets number of Allies and Enemies alive
        - offset: 1
          code: |
           var int x;
           set x 0;
           BattleGame.setTag battle_game Tag.Enemies x;
           BattleGame.setTag battle_game Tag.Allies x;
           BattleGame.setTag battle_game Tag.Turn turn;
           return;

     newTurnUnit: #Counts number of Allies And Enemies alive
        - offset: 2
          code: |
           var int faction;
           var int allies;
           var int enemies;
           BattleUnit.getFaction unit faction;
           if eq faction 0;
             BattleGame.getTag battle_game allies Tag.Allies;
             add allies 1;
             BattleGame.setTag battle_game Tag.Allies allies;
           end;
           if eq faction 1;
             BattleGame.getTag battle_game enemies Tag.Enemies;
             add enemies 1;
             BattleGame.setTag battle_game Tag.Enemies enemies;
           end;
           return;
        - offset: 3
          code: | #flashbang effect removal
           var int flashbanged;
           var int accuracy;
           var int reactions;
           var int OGaccuracy;
           var int OGreactions;
           BattleUnit.getTag unit flashbanged Tag.FlashBanged;
           BattleUnit.getTag unit OGaccuracy Tag.OGfiring;
           BattleUnit.getTag unit OGreactions Tag.OGreactions;
           debug_log flashbanged;
           add flashbanged 4;
           if and gt turn flashbanged gt OGaccuracy 0;
            BattleUnit.Stats.setFiring unit OGaccuracy;
            BattleUnit.Stats.setReactions unit OGreactions;
            end;
           return;
     hitUnit: 
         - offset: 2 #Shield Script
           code: |
            var ptr BattleItem righthand;
            var ptr BattleItem lefthand;
            var int shield;
            var int random;
            var int kneeling;
            unit.getLeftHandWeapon lefthand;
            unit.getRightHandWeapon righthand;
            BattleItem.getTag lefthand shield Tag.Shield;
            if neq shield 1;
             BattleItem.getTag righthand shield Tag.Shield;
             end;
            if and eq side 0 eq shield 1;
             BattleGame.randomRange battle_game random 0 100;
             BattleUnit.isKneeled unit kneeling;
             if lt random 85;
              set power 0;
              end;
             if and lt random 95 eq kneeling 1;
              set power 0;
              end;
            end;
            
            
            return power part side;
         - offset: 3 #Shouting Script
           code: |
            var int x;
            var int allies;
            var int enemies;
            var int morale;
            var int health;
            var int faction;
            var int turn;
            var int shouted;

            BattleItem.getTag damaging_item x Tag.Shout;

            if eq x 1;
             BattleUnit.getFaction unit faction;

             if eq faction 1;
              BattleGame.getTag battle_game turn Tag.Turn;
              BattleUnit.getTag unit shouted Tag.Shouted;
              if eq shouted turn;
               BattleGame.flashMessage battle_game "STR_ALREADY_SHOUTED";
              end;

              if neq shouted turn;
               BattleUnit.setTag unit Tag.Shouted turn;
               BattleGame.getTag battle_game allies Tag.Allies;
               BattleGame.getTag battle_game enemies Tag.Enemies;
               add allies 1;
               sub allies enemies;
               if lt allies 0;
                set allies 0;
               end;
               mul allies 20;
               BattleUnit.getMorale unit morale;
               sub morale allies;
               BattleUnit.setMorale unit morale;
               end;

              end;
            if eq faction 2;
             BattleUnit.getHealth unit health;
             add health 1;
             BattleUnit.setStun unit health;
             end;
            end;
            return power part side;

         - offset: 4 #FlashBang Script
           code: |
             var int flashbang;
             var int flashbanged;
             var int turn;
             var int accuracy;
             var int reactions;
             damaging_item.getTag flashbang Tag.FlashBang;
             if eq flashbang 1;
              battle_game.getTurn turn;
              unit.getTag flashbanged Tag.FlashBanged;
              add flashbanged 4;
              debug_log flashbanged;
              if gt turn flashbanged;
               BattleUnit.Stats.getFiring unit accuracy;
               BattleUnit.Stats.getReactions unit reactions;
               BattleUnit.setTag unit Tag.OGfiring accuracy;
               BattleUnit.setTag unit Tag.OGreactions reactions;
               sub reactions 50;
               sub accuracy 50;
               BattleUnit.Stats.setFiring unit accuracy;
               BattleUnit.Stats.setReactions unit reactions;
              end;
             return power part side;
     healUnit: #Handcuff script
       - offset: 1
         code: |
          var int x;
          var int morale;
          var int health;
          BattleItem.getTag item x Tag.Cuffs;
          if eq x 1;
           BattleUnit.getMorale target morale;
           if lt morale 30;
             BattleUnit.getHealth target health;
             add health 1;
             BattleUnit.setStun target health;
             end;
           end;
          return;

    #  reactionWeaponAction: #Jamming Script (doesn't work)
    #     - offset: 1
    #       code: |
    #        var int chance;
    #        var int random;
    #        var int total;
    #        BattleItem.getTag weapon chance Tag.JammChance;
    #        if gt chance 0;
    #         set total 1000;
    #         sub total chance;
    #         BattleGame.randomRange battle_game random 0 1000;
    #         debug_log random;
    #         if gt random total;
    #          BattleItem.setAmmoQuantity weapon 0;
    #          BattleGame.flashMessage battle_game "STR_JAMMED";
    #          end;
    #         end;
    #         return reaction_chance;

            
           
           
            
     selectItemSprite: #Switches between weapon sprites depending on ammo
       - offset: 1
         code: |
          var int x;
          var int y;
          var ptr BattleItem ammoptr;
          var ptr RuleInventory invptr;
          var int left;
          var int right;
          var int ammono;
          var int z;
          BattleItem.getTag item x Tag.AmmoReSprite;
          if eq x 1;
           item.getAmmoItem ammoptr;
           BattleItem.getTag  ammoptr ammono Tag.AmmoNo;
           BattleItem.getTag item y Tag.FoldStock;
           if eq y 1;
            item.getSlot invptr;
            RuleInventory.isLeftHand invptr left;
            RuleInventory.isRightHand invptr right;
            if and eq left 0 eq right 0;
             set z 1;
             end;
            end;
           if eq z 1;
            add sprite_index 40;
            if eq ammono 1;
             add sprite_index 8;
             end;
            if eq ammono 2;
             add sprite_index 16;
             end;
            if eq ammono 3;
             add sprite_index 24;
             end;
            if eq ammono 4;
             add sprite_index 32;
            end;
           end;
           if neq z 1;
            if eq ammono 1;
             add sprite_index 8;
             end;
            if eq ammono 2;
             add sprite_index 16;
             end;
            if eq ammono 3;
             add sprite_index 24;
             end;
            if eq ammono 4;
             add sprite_index 32;
             end;
            end;
           end;
          return sprite_index; 

extraStrings:
  - type: en-US
    strings:
      STR_ALREADY_SHOUTED: "Unit already shouted at"
      STR_JAMMED: "Weapon Jammed"
